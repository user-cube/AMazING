# Generated by Selenium IDE
import os
from dotenv import load_dotenv
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
from django.test import TestCase

EMAIL = os.getenv('T_USER1')
PASSWORD = os.getenv('T_PW1')

class TestTestuser(TestCase):
  def setUp(self) -> None:
    self.driver = webdriver.Chrome(ChromeDriverManager().install())
    self.vars = {}
  
  def tearDown(self) -> None:
    self.driver.quit()
  
  def test_testuser(self):
    load_dotenv()
    # Test name: test_user
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("http://localhost:8000/")
    # 2 | setWindowSize | 1440x900 | 
    self.driver.set_window_size(1440, 900)
    # 3 | click | css=.btn |
    # 4 | click | id=id_username | 
    self.driver.find_element(By.ID, "id_username").click()
    # 4 | click | id=id_username |
    self.driver.find_element(By.ID, "id_username").send_keys(EMAIL)
    # 5 | type | id=id_password | luis1234
    self.driver.find_element(By.ID, "id_password").click()
    # 5 | type | id=id_password | luis1234
    self.driver.find_element(By.ID, "id_password").send_keys(PASSWORD)
    # 6 | click | css=.btn | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    # 7 | click | css=form:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, "form:nth-child(1)").click()
    # 8 | click | linkText=Network Status | 
    self.driver.find_element(By.LINK_TEXT, "Network Status").click()
    # 9 | click | css=.grid-item:nth-child(5) .rounded | 
    self.driver.find_element(By.CSS_SELECTOR, ".grid-item:nth-child(5) .rounded").click()
    # 10 | click | linkText=Create Iperf Client | 
    self.driver.find_element(By.LINK_TEXT, "Create Iperf Client").click()
    # 11 | click | id=protocol | 
    self.driver.find_element(By.ID, "protocol").click()
    # 12 | click | css=#protocol > option:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, "#protocol > option:nth-child(1)").click()
    # 13 | click | id=ip | 
    self.driver.find_element(By.ID, "ip").click()
    # 14 | type | id=ip | 192.168.0.1
    self.driver.find_element(By.ID, "ip").send_keys("192.168.0.1")
    # 15 | click | css=form:nth-child(4) | 
    self.driver.find_element(By.CSS_SELECTOR, "form:nth-child(4)").click()
    # 16 | click | id=por | 
    self.driver.find_element(By.ID, "por").click()
    # 17 | type | id=por | 5000
    self.driver.find_element(By.ID, "por").send_keys("5000")
    # 18 | click | id=time | 
    self.driver.find_element(By.ID, "time").click()
    # 19 | type | id=time | 20
    self.driver.find_element(By.ID, "time").send_keys("20")
    # 20 | click | css=.form-row:nth-child(13) > .col-md-5 | 
    self.driver.find_element(By.CSS_SELECTOR, ".form-row:nth-child(13) > .col-md-5").click()
    # 21 | click | css=.btn | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    # 22 | click | linkText=AMazING | 
    self.driver.find_element(By.LINK_TEXT, "AMazING").click()
    # 23 | click | linkText=Reservations | 
    self.driver.find_element(By.LINK_TEXT, "Reservations").click()
    # 24 | click | css=.month:nth-child(4) | 
    self.driver.find_element(By.CSS_SELECTOR, ".month:nth-child(4)").click()
    # 25 | click | css=.calendar-body:nth-child(7) > .calendar-day:nth-child(4) > .day | 
    self.driver.find_element(By.CSS_SELECTOR, ".calendar-body:nth-child(7) > .calendar-day:nth-child(4) > .day").click()
    # 26 | click | css=.event-info | 
    self.driver.find_element(By.CSS_SELECTOR, ".event-info").click()
    # 27 | click | linkText=Previous Tests | 
    self.driver.find_element(By.LINK_TEXT, "Previous Tests").click()
    # 28 | click | css=tr:nth-child(1) .btn | 
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .btn").click()
    # 29 | click | id=navbarDropdown | 
    self.driver.find_element(By.ID, "navbarDropdown").click()
    # 30 | click | linkText=Logout | 
    self.driver.find_element(By.LINK_TEXT, "Logout").click()


  
